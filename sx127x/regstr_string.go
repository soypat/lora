// Code generated by "stringer -type _reg ./sx127x/"; DO NOT EDIT.

package sx127x

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[_FIFO-0]
	_ = x[_OP_MODE-1]
	_ = x[_FRF_MSB-6]
	_ = x[_FRF_MID-7]
	_ = x[_FRF_LSB-8]
	_ = x[_PA_CONFIG-9]
	_ = x[_PA_RAMP-10]
	_ = x[_OCP-11]
	_ = x[_LNA-12]
	_ = x[_FIFO_ADDR_PTR-13]
	_ = x[_FIFO_TX_BASE_ADDR-14]
	_ = x[_FIFO_RX_BASE_ADDR-15]
	_ = x[_FIFO_RX_CURRENT_ADDR-16]
	_ = x[_IRQ_FLAGS_MASK-17]
	_ = x[_IRQ_FLAGS-18]
	_ = x[_RX_NB_BYTES-19]
	_ = x[_PKT_SNR_VALUE-25]
	_ = x[_PKT_RSSI_VALUE-26]
	_ = x[_RSSI_VALUE-27]
	_ = x[_MODEM_CONFIG_1-29]
	_ = x[_MODEM_CONFIG_2-30]
	_ = x[_SYMB_TIMEOUT_LSB-31]
	_ = x[_PREAMBLE_MSB-32]
	_ = x[_PREAMBLE_LSB-33]
	_ = x[_PAYLOAD_LENGTH-34]
	_ = x[_MAX_PAYLOAD_LENGTH-35]
	_ = x[_HOP_PERIOD-36]
	_ = x[_MODEM_CONFIG_3-38]
	_ = x[_FREQ_ERROR_MSB-40]
	_ = x[_FREQ_ERROR_MID-41]
	_ = x[_FREQ_ERROR_LSB-42]
	_ = x[_RSSI_WIDEBAND-44]
	_ = x[_DETECTION_OPTIMIZE-49]
	_ = x[_INVERTIQ-51]
	_ = x[_DETECTION_THRESHOLD-55]
	_ = x[_SYNC_WORD-57]
	_ = x[_INVERTIQ2-59]
	_ = x[_DIO_MAPPING_1-64]
	_ = x[_DIO_MAPPING_2-65]
	_ = x[_VERSION-66]
	_ = x[_PA_DAC-77]
}

const __reg_name = "_FIFO_OP_MODE_FRF_MSB_FRF_MID_FRF_LSB_PA_CONFIG_PA_RAMP_OCP_LNA_FIFO_ADDR_PTR_FIFO_TX_BASE_ADDR_FIFO_RX_BASE_ADDR_FIFO_RX_CURRENT_ADDR_IRQ_FLAGS_MASK_IRQ_FLAGS_RX_NB_BYTES_PKT_SNR_VALUE_PKT_RSSI_VALUE_RSSI_VALUE_MODEM_CONFIG_1_MODEM_CONFIG_2_SYMB_TIMEOUT_LSB_PREAMBLE_MSB_PREAMBLE_LSB_PAYLOAD_LENGTH_MAX_PAYLOAD_LENGTH_HOP_PERIOD_MODEM_CONFIG_3_FREQ_ERROR_MSB_FREQ_ERROR_MID_FREQ_ERROR_LSB_RSSI_WIDEBAND_DETECTION_OPTIMIZE_INVERTIQ_DETECTION_THRESHOLD_SYNC_WORD_INVERTIQ2_DIO_MAPPING_1_DIO_MAPPING_2_VERSION_PA_DAC"

var __reg_map = map[regstr]string{
	0:  __reg_name[0:5],
	1:  __reg_name[5:13],
	6:  __reg_name[13:21],
	7:  __reg_name[21:29],
	8:  __reg_name[29:37],
	9:  __reg_name[37:47],
	10: __reg_name[47:55],
	11: __reg_name[55:59],
	12: __reg_name[59:63],
	13: __reg_name[63:77],
	14: __reg_name[77:95],
	15: __reg_name[95:113],
	16: __reg_name[113:134],
	17: __reg_name[134:149],
	18: __reg_name[149:159],
	19: __reg_name[159:171],
	25: __reg_name[171:185],
	26: __reg_name[185:200],
	27: __reg_name[200:211],
	29: __reg_name[211:226],
	30: __reg_name[226:241],
	31: __reg_name[241:258],
	32: __reg_name[258:271],
	33: __reg_name[271:284],
	34: __reg_name[284:299],
	35: __reg_name[299:318],
	36: __reg_name[318:329],
	38: __reg_name[329:344],
	40: __reg_name[344:359],
	41: __reg_name[359:374],
	42: __reg_name[374:389],
	44: __reg_name[389:403],
	49: __reg_name[403:422],
	51: __reg_name[422:431],
	55: __reg_name[431:451],
	57: __reg_name[451:461],
	59: __reg_name[461:471],
	64: __reg_name[471:485],
	65: __reg_name[485:499],
	66: __reg_name[499:507],
	77: __reg_name[507:514],
}

func (i regstr) valid() bool {
	_, ok := __reg_map[i]
	return ok
}

func (i regstr) String() string {
	if str, ok := __reg_map[i]; ok {
		return str
	}
	return "regstr(" + strconv.FormatInt(int64(i), 10) + ")"
}
